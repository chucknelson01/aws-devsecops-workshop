AWSTemplateFormatVersion: '2010-09-09'
Description: AWS DevSecOps Workshop Jenkins

Parameters:
  InstanceType:
    Type: String
    Description: EC2 Instance Type to deploy.
  ImageId:
    Type: String
    Description: AMI to use for Jenkins
  TrustedCIDR:
    Type: String
    Description: The CIDR block to allow SSH/HTTP access to Jenkins from.
  JenkinsKeyName:
    Type: AWS::EC2::KeyPair::KeyName
  ZapVersion:
    Type: String
  GitHubOwner:
    Type: String
  GitHubBranch:
    Type: String

Resources:
  JenkinsServer:
    Type: AWS::EC2::Instance
    Properties:
      NetworkInterfaces:
        - AssociatePublicIpAddress: true
          DeleteOnTermination: true
          SubnetId: !ImportValue 'DevSecOps-JenkinsSubnet'
          DeviceIndex: 0
          GroupSet:
            - !ImportValue 'DevSecOps-JenkinsSecurityGroup'
      Tags:
        - Key: Name
          Value: 'AWS DevSecOps Workshop - jenkins'
        - Key: Stack
          Value: !Ref 'AWS::StackName'
      LaunchTemplate:
        LaunchTemplateId: !Ref JenkinsLaunchTemplate
        Version: 1
    CreationPolicy:
      ResourceSignal:    
        Count: 1
        Timeout: PT10M

  JenkinsLaunchTemplate:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateData:
        ImageId: !Ref ImageId
        InstanceType: !Ref InstanceType
        KeyName: !Ref JenkinsKeyName
        IamInstanceProfile:
          Name: !ImportValue 'DevSecOps-JenkinsInstanceProfile'
        UserData:
          Fn::Base64: !Sub |
            #!/bin/bash -xe
            yum -y update
            pip install ansible
            /opt/aws/bin/cfn-init -v --stack ${AWS::StackId} --resource JenkinsLaunchTemplate --configsets full_install --region ${AWS::Region}
            /opt/aws/bin/cfn-signal -e $? --resource JenkinsServer --stack ${AWS::StackId} --region ${AWS::Region}
    Metadata:
      AWS::CloudFormation::Init:
        configSets:
          full_install:
            - install_cfn
            - uninstall_packages
            - install_deps
            - install_jenkins_repo
            - install_jenkins
            - configure_jenkins
            - install_owasp
            - install_nginx
        install_cfn:
          files:
            /etc/cfn/cfn-hup.conf:
              content: !Sub |
                [main]
                stack=${AWS::StackId}
                region=${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/hooks.d/cfn-auto-reloader.conf:
              content: !Sub |
                [cfn-auto-reloader-hook]
                triggers=post.update
                path=Resources.JenkinsLaunchTemplate.Metadata.AWS::CloudFormation::Init
                action=/opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource JenkinsServer --configsets full_install --region ${AWS::Region}
                runas=root
          services:
            sysvinit:
              cfn-hup:
                enabled: true
                ensureRunning: true
                files:
                  - /etc/cfn/cfn-hup.conf
                  - /etc/cfn/hooks.d/cfn-auto-reloader.conf
        uninstall_packages:
          commands:
            01-uninstall-packages:
              command: yum -y remove java-1.7.0-openjdk ruby20-libs ruby ruby20 ruby20-irb
        install_jenkins_repo:
          files:
            /etc/yum.repos.d/jenkins.repo:
              source: http://pkg.jenkins.io/redhat/jenkins.repo
              mode: '000644'
              owner: root
              group: root
          commands:
            01-install:
              command: rpm --import https://pkg.jenkins.io/redhat/jenkins.io.key
        install_jenkins:
          packages:
            yum:
              jenkins: []
          services:
            sysvinit:
              jenkins:
                enabled: true
                ensureRunning: true
                files:
                  - /var/lib/jenkins/config.xml
        configure_jenkins:
          packages:
            python:
              #ansible: "https://files.pythonhosted.org/packages/59/3a/5b8aeca9b0b68e7a02fdfd7260f265be3b0605839d7367501aba4bcb2e14/ansible-2.9.0.tar.gz"
              boto3: []
          files:
          files:
            /root/config.xml:
              source: !Sub https://raw.githubusercontent.com/${GitHubOwner}/aws-devsecops-workshop/${GitHubBranch}/provisioning/jenkins/config.xml
              mode: '000644'
              owner: jenkins
              group: jenkins
            /root/playbook.yml:
              source: !Sub https://raw.githubusercontent.com/${GitHubOwner}/aws-devsecops-workshop/${GitHubBranch}/provisioning/jenkins/playbook.yml
              mode: '000644'
              owner: root
              group: root
            /var/lib/jenkins/jobs/seed-aws-devsecops-workshop/config.xml:
              source: !Sub https://raw.githubusercontent.com/${GitHubOwner}/aws-devsecops-workshop/${GitHubBranch}/provisioning/jenkins/seed.xml
              mode: '000644'
              owner: jenkins
              group: jenkins
              context:
                GITHUB_OWNER: !Ref GitHubOwner
                GITHUB_BRANCH: !Ref GitHubBranch
            /var/lib/jenkins/javaposse.jobdsl.plugin.GlobalJobDslSecurityConfiguration.xml:
              source: !Sub https://raw.githubusercontent.com/${GitHubOwner}/aws-devsecops-workshop/${GitHubBranch}/provisioning/jenkins/javaposse.jobdsl.plugin.GlobalJobDslSecurityConfiguration.xml
              mode: '000644'
              owner: jenkins
              group: jenkins
            /var/lib/jenkins/scriptApproval.xml:
              source: !Sub https://raw.githubusercontent.com/${GitHubOwner}/aws-devsecops-workshop/${GitHubBranch}/provisioning/jenkins/scriptApproval.xml
              mode: '000644'
              owner: jenkins
              group: jenkins
            /var/lib/jenkins/jenkins.model.JenkinsLocationConfiguration.xml:
              source: !Sub https://raw.githubusercontent.com/${GitHubOwner}/aws-devsecops-workshop/${GitHubBranch}/provisioning/jenkins/jenkins.model.JenkinsLocationConfiguration.xml
              mode: '000644'
              owner: jenkins
              group: jenkins
            /var/lib/jenkins/pen-test-app.py:
              source: !Sub https://raw.githubusercontent.com/${GitHubOwner}/aws-devsecops-workshop/${GitHubBranch}/pipeline/scripts/pen-test-app.py
              mode: '000755'
              owner: jenkins
              group: jenkins
            /var/lib/jenkins/jenkins_vpc_id:
              content: !ImportValue 'DevSecOps-JenkinsVPC'
              mode: '000644'
              owner: jenkins
              group: jenkins
            /var/lib/jenkins/jenkins_subnet_id:
              content: !ImportValue 'DevSecOps-JenkinsSubnet'
              mode: '000644'
              owner: jenkins
              group: jenkins
            /var/lib/jenkins/jenkins_vpc_stack_name:
              content: !ImportValue 'DevSecOps-JenkinsVPCStackName'
              mode: '000644'
              owner: jenkins
              group: jenkins
            /var/lib/jenkins/jenkins_inspector_assessment_template_arn:
              content: !ImportValue 'DevSecOps-JenkinsInspectorAssessmentTemplateArn'
              mode: '000644'
              owner: jenkins
              group: jenkins
          commands:
            01-chown-seed-dir:
              command: chown -c jenkins. /var/lib/jenkins/jobs/seed-aws-devsecops-workshop
            02-run-ansible:
              command: !Sub /usr/local/bin/ansible-playbook -v /root/playbook.yml -e aws_region=${AWS::Region}
        install_nginx:
          files:
            /etc/nginx/conf.d/jenkins.conf:
              source: !Sub https://raw.githubusercontent.com/${GitHubOwner}/aws-devsecops-workshop/${GitHubBranch}/provisioning/nginx/jenkins.conf
              mode: '000644'
              owner: root
              group: root
            /etc/nginx/nginx.conf:
              source: !Sub https://raw.githubusercontent.com/${GitHubOwner}/aws-devsecops-workshop/${GitHubBranch}/provisioning/nginx/nginx.conf
              mode: '000644'
              owner: root
              group: root
          packages:
            yum:
              nginx: ["1.16.1"]
          services:
            sysvinit:
              nginx:
                enabled: true
                ensureRunning: true
                files:
                  - /etc/nginx/conf.d/jenkins.conf
                  - /etc/nginx/nginx.conf
        install_owasp:
          sources:
            /root: !Sub https://github.com/zaproxy/zaproxy/releases/download/${ZapVersion}/ZAP_${ZapVersion}_Linux.tar.gz
          files:
            /etc/init.d/owasp-zap:
              source: !Sub https://raw.githubusercontent.com/${GitHubOwner}/aws-devsecops-workshop/${GitHubBranch}/provisioning/owasp/zap.rc
              mode: '000755'
              owner: root
              group: root
          commands:
            01-install-owasp-zap:
              command: !Sub mv -fv /root/ZAP_${ZapVersion} /opt/zap
          services:
            sysvinit:
              owasp-zap:
                enabled: true
                ensureRunning: true
        install_deps:
          packages:
            yum:
              gcc: []
              git: []
              libffi-devel: []
              openssl-devel: []
              httpd-tools: []
              ruby27: []
              ruby27: []
              ruby27-irb: []
              ruby27-libs: []
              ruby27-devel: []
              ruby27-doc: []
              rubygem27-json: []
              rubygem27-rake: []
              rubygems27: []
              rubygems27-devel: []
              java-1.8.0-openjdk: []

Outputs:
  InstanceID:
    Value: !Ref 'JenkinsServer'
  JenkinsIP:
    Value: !GetAtt 'JenkinsServer.PublicIp'
